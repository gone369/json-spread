!function(r){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.jsonSpread=r()}}(function(){return function r(t,e,n){function o(a,f){if(!e[a]){if(!t[a]){var c="function"==typeof require&&require;if(!f&&c)return c(a,!0);if(i)return i(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var s=e[a]={exports:{}};t[a][0].call(s.exports,function(r){var e=t[a][1][r];return o(e?e:r)},s,s.exports,r,t,e,n)}return e[a].exports}for(var i="function"==typeof require&&require,a=0;a<n.length;a++)o(n[a]);return o}({1:[function(r,t,e){function n(r,t){function e(r,c){Object.keys(r).forEach(function(u){var s=r[u],p=t.safe&&Array.isArray(s),l=Object.prototype.toString.call(s),y=i(s),b="[object Object]"===l||"[object Array]"===l,j=c?c+n+u:u;return t.maxDepth||(o=a+1),!p&&!y&&b&&Object.keys(s).length&&a<o?(++a,e(s,j)):void(f[j]=s)})}t=t||{};var n=t.delimiter||".",o=t.maxDepth,a=1,f={};return e(r),f}function o(r,t){function e(r){var t=Number(r);return isNaN(t)||r.indexOf(".")!==-1?r:t}t=t||{};var n=t.delimiter||".",a=t.overwrite||!1,f={},c=i(r);return c||"[object Object]"!==Object.prototype.toString.call(r)?r:(Object.keys(r).forEach(function(i){for(var c=i.split(n),u=e(c.shift()),s=e(c[0]),p=f;void 0!==s;){var l=Object.prototype.toString.call(p[u]),y="[object Object]"===l||"[object Array]"===l;if(!a&&!y&&"undefined"!=typeof p[u])return;(a&&!y||!a&&null==p[u])&&(p[u]="number"!=typeof s||t.object?{}:[]),p=p[u],c.length>0&&(u=e(c.shift()),s=e(c[0]))}p[u]=o(r[i],t)}),f)}var i=r("is-buffer");t.exports=n;n.flatten=n,n.unflatten=o},{"is-buffer":4}],2:[function(r,t,e){"use strict";t.exports=function(r,t,e){var n=[];return Array.isArray(r)?(r.forEach(function(r,o,i){var a=t.call(e,r,o,i);Array.isArray(a)?n.push.apply(n,a):null!=a&&n.push(a)}),n):n}},{}],3:[function(r,t,e){var n=Object.prototype.hasOwnProperty,o=Object.prototype.toString;t.exports=function(r,t,e){if("[object Function]"!==o.call(t))throw new TypeError("iterator must be a function");var i=r.length;if(i===+i)for(var a=0;a<i;a++)t.call(e,r[a],a,r);else for(var f in r)n.call(r,f)&&t.call(e,r[f],f,r)}},{}],4:[function(r,t,e){/**
 * Determine if an object is Buffer
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install is-buffer`
 */
t.exports=function(r){return!(null==r||!(r._isBuffer||r.constructor&&"function"==typeof r.constructor.isBuffer&&r.constructor.isBuffer(r)))}},{}],5:[function(r,t,e){/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
"use strict";function n(r){return o(r)===!0&&"[object Object]"===Object.prototype.toString.call(r)}var o=r("isobject");t.exports=function(r){var t,e;return n(r)!==!1&&(t=r.constructor,"function"==typeof t&&(e=t.prototype,n(e)!==!1&&e.hasOwnProperty("isPrototypeOf")!==!1))}},{isobject:6}],6:[function(r,t,e){/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
"use strict";t.exports=function(r){return null!=r&&"object"==typeof r&&!Array.isArray(r)}},{}],7:[function(r,t,e){"use strict";function n(r){if(null===r||void 0===r)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(r)}function o(){try{if(!Object.assign)return!1;var r=new String("abc");if(r[5]="de","5"===Object.getOwnPropertyNames(r)[0])return!1;for(var t={},e=0;e<10;e++)t["_"+String.fromCharCode(e)]=e;var n=Object.getOwnPropertyNames(t).map(function(r){return t[r]});if("0123456789"!==n.join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach(function(r){o[r]=r}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(i){return!1}}var i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;t.exports=o()?Object.assign:function(r,t){for(var e,o,f=n(r),c=1;c<arguments.length;c++){e=Object(arguments[c]);for(var u in e)i.call(e,u)&&(f[u]=e[u]);if(Object.getOwnPropertySymbols){o=Object.getOwnPropertySymbols(e);for(var s=0;s<o.length;s++)a.call(e,o[s])&&(f[o[s]]=e[o[s]])}}return f}},{}],8:[function(r,t,e){/*
 *The MIT License (MIT)
 *Copyright (c) 2016 Xun Chen
 *
 *Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 *The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
var n=r("./spread.js"),o=r("object-assign"),i={delimiter:".",removeEmptyArray:!1,emptyValue:null,safe:!0,debug:!1},a=function(r,t){return a.spread(r,t)};a.spread=function(r,t){var e={};return o(e,i,t),n(r,e)},t.exports=a},{"./spread.js":9,"object-assign":7}],9:[function(r,t,e){/*
 *The MIT License (MIT)
 *Copyright (c) 2016 Xun Chen
 *
 *Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 *The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
var n=r("flat"),o=r("object-assign"),i=r("foreach"),a=r("is-plain-object"),f=r("flatmap"),c=r("./util.js");t.exports=function(r,t){function e(r){function u(r){r=n(r,{safe:!0,delimiter:t.delimiter});var a=[],f=!1,u={};return i(r,function(r,t){Array.isArray(r)||(u[t]=r)}),i(r,function(n,s){if(Array.isArray(n)){if(0===n.length)return void(t.removeEmptyArray?delete r[s]:r[s]=t.emptyValue);f=!0;var p=[];c.containsNestedArray(n)?i(n,function(r,t){var n=e(r);i(n,function(r,t){p.push(r)})}):p=n,i(p,function(r,t){var e={};e[s]=r,a.push(o({},u,e))})}}),f?a=e(a):[r]}if(a(r))return u(r);if(Array.isArray(r))return f(r,function(r){return u(r)});throw new TypeError("json-spread input needs to be either a plain object or an array. You inputted a typeof"+typeof r)}return e(r)}},{"./util.js":10,flat:1,flatmap:2,foreach:3,"is-plain-object":5,"object-assign":7}],10:[function(r,t,e){var n=r("flat"),o=r("foreach");t.exports=function(){function r(r){r=n(r,{safe:!0});var t=!1;return o(r,function(r,e){Array.isArray(r)&&(t=!0)}),t}function t(r,e){function n(r,e){return 0===o.length?r:(r=r[e.shift()],t(r,e))}var o=JSON.parse(JSON.stringify(e)),i=JSON.parse(JSON.stringify(r));return n(i,o)}function e(r){return Array.isArray(r)?r:[r]}return{containsNestedArray:r,getNode:t,convertToArray:e}}()},{flat:1,foreach:3}]},{},[8])(8)});
//# sourceMappingURL=data:application/json;base64,
